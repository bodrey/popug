version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    ports:
        - 5672:5672
        - 15672:15672
    # volumes:
    #     - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #     - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5

  auth:
    build:
      context: auth
    ports:
      - 8000:8000
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    # command: python /app/manage.py listener
    command: bash -c "python /app/manage.py listener & python /app/manage.py runserver 0.0.0.0:8000 & watchfiles --filter python 'python /app/manage.py listener' app/service/management/commands"
    # command: bash -c "python /app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./auth:/app
      - ./asyncs/asyncs.py:/app/asyncs.py

  task:
    build:
      context: task
    ports:
      - 8010:8010
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    command: python /app/manage.py runserver 0.0.0.0:8010
    volumes:
      - ./task:/app
      - ./asyncs/asyncs.py:/app/asyncs.py

  billing:
    build:
      context: billing
    ports:
      - 8020:8020
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    command: python /app/manage.py runserver 0.0.0.0:8020
    volumes:
      - ./billing:/app
      - ./asyncs/asyncs.py:/app/asyncs.py